"""
Test cases for my_list function
"""


>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

# Create an instance of BaseGeometry
>>> bg = BaseGeometry()

# Test the area method (should raise an exception)
>>> bg.area()
Traceback (most recent call last):
    ...
Exception: area() is not implemented

# Test integer_validator with valid integers (no exception should be raised)
>>> bg.integer_validator("my_int", 12)
>>> bg.integer_validator("width", 89)

# Test integer_validator with a non-integer (should raise a TypeError)
>>> bg.integer_validator("name", "John")
Traceback (most recent call last):
    ...
TypeError: name must be an integer

# Test integer_validator with zero (should raise a ValueError)
>>> bg.integer_validator("age", 0)
Traceback (most recent call last):
    ...
ValueError: age must be greater than 0

# Test integer_validator with a negative integer (should raise a ValueError)
>>> bg.integer_validator("distance", -4)
Traceback (most recent call last):
    ...
ValueError: distance must be greater than 0
