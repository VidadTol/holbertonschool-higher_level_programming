#!/usr/bin/python3
"""
Test cases for matrix_divided function
"""

>>> matrix_divided = __import__('matrix_divided').matrix_divided

# Dividing each element of the matrix by a positive number
>>> matrix_divided([[1, 2], [3, 4]], 2)
[[0.5, 1.0], [1.5, 2.0]]

# Dividing each element of the matrix by a negative number
>>> matrix_divided([[-1, -2], [-3, -4]], -1)
[[1.0, 2.0], [3.0, 4.0]]

# Dividing each element of the matrix by a float
>>> matrix_divided([[1, 2], [3, 4]], 1.5)
[[0.67, 1.33], [2.0, 2.67]]

# Each row of the matrix must have the same size
>>> matrix_divided([[1, 2, 3], [4, 5]], 2)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size

# matrix must be a list of lists of integers or floats
>>> matrix_divided([[1, 2], [3, '4']], 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# div must be a number (integer or float)
>>> matrix_divided([[1, 2], [3, 4]], '2')
Traceback (most recent call last):
    ...
TypeError: div must be a number

# div can't be equal to 0
>>> matrix_divided([[1, 2], [3, 4]], 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero
